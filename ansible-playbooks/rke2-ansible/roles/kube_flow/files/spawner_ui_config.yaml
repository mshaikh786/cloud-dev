# Configuration file for the Jupyter UI.
#
# Each Jupyter UI option is configured by two keys: 'value' and 'readOnly'
# - The 'value' key contains the default value
# - The 'readOnly' key determines if the option will be available to users
#
# If the 'readOnly' key is present and set to 'true', the respective option
# will be disabled for users and only set by the admin. Also when a
# Notebook is POSTED to the API if a necessary field is not present then
# the value from the config will be used.
#
# If the 'readOnly' key is missing (defaults to 'false'), the respective option
# will be available for users to edit.
#
# Note that some values can be templated. Such values are the names of the
# Volumes as well as their StorageClass
spawnerFormDefaults:
  image:
    # The container Image for the user's Jupyter Notebook
    value: ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter-scipy:v1.10.0

    # the list of available container images in the dropdown
    options:
    - ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter-scipy:v1.10.0
    - ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter-pytorch-full:v1.10.0
    - ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter-pytorch-cuda-full:v1.10.0
    - ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter-pytorch-gaudi-full:v1.10.0
    - ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter-tensorflow-full:v1.10.0
    - ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter-tensorflow-cuda-full:v1.10.0


  imageGroupOne:
    # The container Image for the user's Group One Server
    # The annotation `notebooks.kubeflow.org/http-rewrite-uri: /`
    # is applied to notebook in this group, configuring
    # the Istio rewrite for containers that host their web UI at `/`
    value: ghcr.io/kubeflow/kubeflow/notebook-servers/codeserver-python:v1.10.0
    # The list of available standard container Images
    options:
    - ghcr.io/kubeflow/kubeflow/notebook-servers/codeserver-python:v1.10.0
  imageGroupTwo:
    # The container Image for the user's Group Two Server
    # The annotation `notebooks.kubeflow.org/http-rewrite-uri: /`
    # is applied to notebook in this group, configuring
    # the Istio rewrite for containers that host their web UI at `/`
    # The annotation `notebooks.kubeflow.org/http-headers-request-set`
    # is applied to notebook in this group, configuring Istio
    # to add the `X-RStudio-Root-Path` header to requests
    value: kubeflownotebookswg/rstudio-tidyverse:v1.6.0
    # The list of available standard container Images
    options:
    - kubeflownotebookswg/rstudio-tidyverse:v1.6.0


  # If true, hide registry and/or tag name in the image selection dropdown
  hideRegistry: true
  hideTag: false
  allowCustomImage: true
  # If true, users can input custom images
  # If false, users can only select from the images in this config
  imagePullPolicy:
    # Supported values: Always, IfNotPresent, Never
    value: IfNotPresent
    readOnly: false
  cpu:
    # CPU for user's Notebook
    value: '2.0'
    # Factor by with to multiply request to calculate limit
    # if no limit is set, to disable set "none"
    limitFactor: "2.0"
    readOnly: false
  memory:
    # Memory for user's Notebook
    value: 4.0Gi
    # Factor by with to multiply request to calculate limit
    # if no limit is set, to disable set "none"
    limitFactor: "4.0"
    readOnly: false
  environment:
    value: {}
    readOnly: false
  workspaceVolume:
    # Workspace Volume to be attached to user's Notebook
    # If you don't want a workspace volume then delete the 'value' key
    value:
      mount: /home/jovyan
      newPvc:
        metadata:
          name: '{notebook-name}-workspace'
        spec:
          resources:
            requests:
              storage: 20Gi
          accessModes:
          - ReadWriteMany
    readOnly: false
  dataVolumes:
    # List of additional Data Volumes to be attached to the user's Notebook
    value: []
    readOnly: false
  gpus:
    # Number of GPUs to be assigned to the Notebook Container
    value:
      # values: "none", "1", "2", "4", "8"
      num: "none"
      # Determines what the UI will show and send to the backend
      vendors:
      - limitsKey: "nvidia.com/gpu"
        uiName: "NVIDIA"
      - limitsKey: "amd.com/gpu"
        uiName: "AMD"
      # Values: "" or a `limits-key` from the vendors list
      #vendor: ""
    readOnly: false
  affinityConfig:
    # If readonly, the default value will be the only option
    # value is a list of `configKey`s that we want to be selected by default
    value: "Pascal"
    # The list of available affinity configs
    # options: []
    options:
      - configKey: "p100"
        displayName: "Pascal"
        affinity:
          # (Require) Node having label: `node_pool=notebook-n1-standard-2`
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "p100"
                      operator: "In"
                      values:
                        - "True"

      - configKey: "v100"
        displayName: "Volta"
        affinity:
          # (Require) Node having label: `node_pool=notebook-n1-standard-2`
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "v100"
                      operator: "In"
                      values:
                          - "True"
      - configKey: "a10"
        displayName: "Ampere-A10"
        affinity:
          # (Require) Node having label: `node_pool=notebook-n1-standard-2`
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "a10"
                      operator: "In"
                      values:
                          - "True"
      - configKey: "intel"
        displayName: "Intel-CPU"
        affinity:
          # (Require) Node having label: `node_pool=notebook-n1-standard-2`
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "intel"
                      operator: "In"
                      values:
                        - "True"
      - configKey: "amd"
        displayName: "AMD-CPU"
        affinity:
          # (Require) Node having label: `node_pool=notebook-n1-standard-2`
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "amd"
                      operator: "In"
                      values:
                        - "True"
      - configKey: "arm"
        displayName: "AMPERE-CPU"
        affinity:
          # (Require) Node having label: `node_pool=notebook-n1-standard-2`
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "arm"
                      operator: "In"
                      values:
                        - "True"
    readOnly: false
  tolerationGroup:
    # The default `groupKey` from the options list
    # If readonly, the default value will be the only option
    value: ""
    # The list of available tolerationGroup configs
    options: []
    readOnly: false
  shm:
    value: true
    readOnly: false
  configurations:
    # List of labels to be selected, these are the labels from PodDefaults
    value:
      - application-catalouge
      - reference-data
      - my-environments
    #   - default-editor
    readOnly: false
